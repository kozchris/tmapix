/*
 * Gradle 0.9 build file.
 * 
 * - Download Gradle from <http://www.gradle.org/>
 * - Execute gradle build
 */
group = 'org.tmapix'
version = '0.4.0'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'osgi'
apply plugin: 'maven'

defaultTasks 'clean', 'build'

gradle.taskGraph.whenReady {taskGraph ->
   if (!taskGraph.hasTask(':release')) {
       version += '-SNAPSHOT'
   }
}

repositories {
    mavenCentral()
    mavenRepo urls: 'http://www.tmapi.org/maven-repository/'
    mavenRepo urls: 'http://www.tmapi.org/maven-repository/snapshots/'
    mavenRepo urls: 'http://tinytim.sourceforge.net/maven-repository/'
    mavenRepo urls: 'http://tinytim.sourceforge.net/maven-repository/snapshots/'
    mavenRepo urls: 'http://ontopia.googlecode.com/svn/maven-repository'
    mavenRepo urls: 'http://ontopia.googlecode.com/svn/maven-snapshot-repository/'
    mavenRepo urls: 'http://repository.jboss.com/maven2/'
    mavenRepo urls: 'http://repository.semagia.com/snapshots/'
}

configurations {
    compiledep
}

dependencies {
    compile 'org.tmapi:tmapi:2.0.2'
    compile 'org.slf4j:slf4j-api:1.6.1'
    compile 'com.semagia.mio:mio-core:0.9.6-SNAPSHOT'
    compile 'com.semagia.mio:mio-syntaxpack:0.1.0-SNAPSHOT'
    
    // We need tinyTiM and Ontopia in the classpath at compile time
    // (and in Eclipse) but they shouldn't be exposed as dependency
    compiledep 'org.tmapix:tmapix-core:0.2.0-SNAPSHOT'
    compiledep 'org.tinytim:tinytim:2.0.1-SNAPSHOT'
    compiledep 'net.ontopia:ontopia-engine:5.1.0-SNAPSHOT@jar'
    compiledep 'net.ontopia:ontopia-mio:0.1.0-SNAPSHOT'
    
    testCompile 'junit:junit:4.8.1'
    testCompile 'com.semagia.mio:mio-core-tests:0.9.6-SNAPSHOT'
    
    // This sucks! Would be cool if "compiledep" dependencies 
    // could be used as testCompile deps *without* repeating the whole deps here
    testCompile 'org.tmapix:tmapix-core:0.2.0-SNAPSHOT'
    testCompile 'org.tinytim:tinytim:2.0.1-SNAPSHOT'
    testCompile 'net.ontopia:ontopia-engine:5.1.0-SNAPSHOT@jar'
    testCompile 'net.ontopia:ontopia-mio:0.1.0-SNAPSHOT'
}

sourceSets {
    main {
      compileClasspath = sourceSets.main.compileClasspath + configurations.compiledep
    }
}

uploadArchives {
    repositories.mavenDeployer {
        repository(url: "file://$buildDir/maven-repo/")
    }
}
